@model List<Wishlist>
@{
    ViewData["Title"] = "My Wishlist";
}

@section Styles {
    <style>
        .card-title {
            letter-spacing: 0 !important;
        }

        .card-body {
            min-height: 120px;
            padding: 1rem;
        }

        .book-card .card {
            transition: transform 0.3s ease, box-shadow 0.3s ease;
        }

        .book-card:hover .card {
            transform: translateY(-5px);
            box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15);
        }

        .bg-light {
            background-color: rgba(248, 249, 250, 0.9) !important;
        }

        .price-tag {
            padding: 0.5rem;
            background: rgba(248, 249, 250, 0.9);
            border-radius: 0.5rem;
        }

        .old-price {
            text-decoration: line-through;
            color: #6c757d;
            font-size: 0.8em;
        }

        .new-price {
            color: #2a8c4a;
            font-weight: bold;
            font-size: 1.1em;
            margin-left: 5px;
        }
    </style>
}

<h1>My Wishlist</h1>

@if (Model.Any())
{
    <div class="row row-cols-2 row-cols-sm-3 row-cols-md-4 row-cols-lg-5 row-cols-xl-6 g-3 py-5 justify-content-center">
        @foreach (var item in Model)
        {
            <div class="col book-container">
                <div class="book-card hover-transform h-100">
                    <div class="card h-100 border-0 shadow-sm overflow-hidden d-flex flex-column">
                        <div style="height: 280px; overflow: hidden; position: relative;">
                            <img src="@(string.IsNullOrEmpty(item.Book.ImageUrl) ? "/images/placeholder-book.png" : item.Book.ImageUrl)"
                                 class="card-img-top img-fluid h-100 w-100"
                                 alt="Book cover: @item.Book.Title"
                                 style="object-fit: cover; object-position: top;">
                        </div>
                        <div class="card-body d-flex flex-column align-items-center justify-content-center text-center">
                            <h6 class="card-title text-dark mb-2">@item.Book.Title</h6>
                            <p class="text-muted small mb-3">by <span class="text-warning"><strong>@item.Book.Author</strong></span></p>
                            <div class="mt-auto">
                                @if (item.Book.TransactionType == TransactionType.Sell)
                                {
                                    <div class="price-tag">
                                        @if (item.Book.ListPrice.HasValue && item.Book.Price5.HasValue && item.Book.ListPrice > item.Book.Price5)
                                        {
                                            <span class="old-price">@item.Book.ListPrice?.ToString("c")</span>
                                            <span class="new-price">@item.Book.Price5?.ToString("c")</span>
                                        }
                                        else
                                        {
                                            <span class="new-price">@(item.Book.Price5?.ToString("c") ?? "Contact for price")</span>
                                        }
                                    </div>
                                }
                                else
                                {
                                    <div class="text-center py-2 bg-light rounded">
                                        <span class="fw-bold new-price">For Borrow</span>
                                    </div>
                                }
                            </div>
                        </div>
                        <div class="card-footer bg-transparent border-0 d-flex justify-content-between align-items-center">
                            <a href="@Url.Action("Details", "Home", new { bookId = item.Book.BookId, area = "Member" })"
                               class="btn btn-sm btn-primary"
                               aria-label="View details of @item.Book.Title">
                                Explore
                            </a>
                            <button class="btn btn-sm btn-danger remove-wishlist"
                                    data-book-id="@item.Book.BookId"
                                    title="Remove from wishlist">
                                Remove
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
}
else
{
    <p>No books in your wishlist.</p>
}

@section Scripts {
    <script>
        $(document).ready(function() {
            // Handle wishlist removal with AJAX
            $('.remove-wishlist').click(function() {
                var button = $(this);
                var bookId = button.data('book-id');
                $.ajax({
                    url: '@Url.Action("RemoveFromWishlist", "Wishlist", new { area = "Member" })',
                    type: 'POST',
                    data: { bookId: bookId },
                    success: function(response) {
                        if (response.success) {
                            button.closest('.book-container').remove(); // Remove the card from the UI
                            updateWishlistCount(response.count); // Update the wishlist count
                            if (response.message) {
                                toastr.success(response.message); // Show Toastr success message
                            }
                        } else if (response.error) {
                            toastr.error(response.error); // Show Toastr error message
                        }
                    },
                    error: function(xhr, status, error) {
                        console.error('Remove Wishlist Error:', status, error);
                        toastr.error('Error removing from wishlist.');
                    }
                });
            });
        });
    </script>
}