@model BookSearchVM

<div class="results-container position-relative">
    <!-- Local Loading Indicator -->
    <div id="results-loading" class="d-none text-center py-3">
        <div class="spinner-border text-muted" style="width: 2rem; height: 2rem;" role="status">
            <span class="visually-hidden">Loading results...</span>
        </div>
    </div>

    @if (Model.Books != null && Model.Books.Any())
    {
        <div class="row row-cols-2 row-cols-sm-3 row-cols-md-4 row-cols-lg-5 row-cols-xl-6 g-3 py-5 justify-content-center">
            @foreach (var book in Model.Books)
            {
                <div class="col book-container" data-aos="fade-up">
                    <div class="book-card hover-transform h-100">
                        <div class="card h-100 border-0 shadow-sm overflow-hidden d-flex flex-column">
                            <div style="height: 280px; overflow: hidden;">
                                <img src="@(string.IsNullOrEmpty(book.ImageUrl) ? "/images/placeholder-book.png" : book.ImageUrl)"
                                     class="card-img-top img-fluid h-100 w-100 lazyload"
                                     alt="Book cover: @book.Title"
                                     loading="lazy"
                                     data-src="@book.ImageUrl"
                                     style="object-fit: cover; object-position: top;">
                            </div>
                            <div class="card-body d-flex flex-column align-items-center justify-content-center text-center">
                                <h6 class="card-title text-dark mb-2">@book.Title</h6>
                                <p class="text-muted small mb-3">by <span class="text-warning"><strong>@book.Author</strong></span></p>
                                <div class="mt-auto">
                                    @if (book.TransactionType == TransactionType.Sell)
                                    {
                                        <div class="price-tag">
                                            @if (book.ListPrice.HasValue && book.Price5.HasValue && book.ListPrice > book.Price5)
                                            {
                                                <span class="old-price">@book.ListPrice?.ToString("c")</span>
                                                <span class="new-price">@book.Price5?.ToString("c")</span>
                                            }
                                            else
                                            {
                                                <span class="new-price">@(book.Price5?.ToString("c") ?? "Contact for price")</span>
                                            }
                                        </div>
                                    }
                                    else
                                    {
                                        <div class="text-center py-2 bg-light rounded">
                                            <span class="fw-bold new-price">For Borrow</span>
                                        </div>
                                    }
                                </div>
                            </div>
                            <div class="card-footer bg-transparent mt-auto border-0">
                                <a href="@Url.Action("Details", new { bookId = book.BookId })"
                                   class="btn btn-sm btn-primary w-100"
                                   aria-label="View details of @book.Title">
                                    Explore ➔
                                </a>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>

        <!-- Pagination -->
        @if (Model.Books.TotalPages > 1)
        {
            <nav aria-label="Page navigation" class="mt-4 mb-5">
                <ul class="pagination justify-content-center">
                    @if (Model.Books.HasPreviousPage)
                    {
                        <li class="page-item">
                            <a class="page-link pagination-link" href="javascript:void(0)" data-page="@(Model.Books.PageIndex - 1)" aria-label="Previous page">
                                <span aria-hidden="true">«</span> Previous
                            </a>
                        </li>
                    }

                    @{
                        const int pagesToShow = 5;
                        int startPage = Math.Max(1, Model.Books.PageIndex - pagesToShow / 2);
                        int endPage = Math.Min(Model.Books.TotalPages, startPage + pagesToShow - 1);
                        startPage = Math.Max(1, Math.Min(startPage, Model.Books.TotalPages - pagesToShow + 1));
                    }

                    @if (startPage > 1)
                    {
                        <li class="page-item"><a class="page-link pagination-link" href="javascript:void(0)" data-page="1">1</a></li>
                        @if (startPage > 2)
                        {
                            <li class="page-item disabled"><span class="page-link">...</span></li>
                        }
                    }

                    @for (int i = startPage; i <= endPage; i++)
                    {
                        <li class="page-item @(i == Model.Books.PageIndex ? "active" : "")">
                            <a class="page-link pagination-link" href="javascript:void(0)" data-page="@i">@i</a>
                        </li>
                    }

                    @if (endPage < Model.Books.TotalPages)
                    {
                        @if (endPage < Model.Books.TotalPages - 1)
                        {
                            <li class="page-item disabled"><span class="page-link">...</span></li>
                        }
                        <li class="page-item">
                            <a class="page-link pagination-link" href="javascript:void(0)" data-page="@Model.Books.TotalPages">@Model.Books.TotalPages</a>
                        </li>
                    }

                    @if (Model.Books.HasNextPage)
                    {
                        <li class="page-item">
                            <a class="page-link pagination-link" href="javascript:void(0)" data-page="@(Model.Books.PageIndex + 1)" aria-label="Next page">
                                Next <span aria-hidden="true">»</span>
                            </a>
                        </li>
                    }
                </ul>
            </nav>
        }
    }
    else
    {
        <div class="alert alert-info mt-4 text-center" role="alert">
            <h4>No books found</h4>
            <p>Try adjusting your filters or search terms</p>
        </div>
    }
</div>

@section Scripts {
    <script>
        $(function () {
            // Enhance loadResults to show local loading
            const originalLoadResults = window.loadResults;
            window.loadResults = async function () {
                $('#results-loading').removeClass('d-none');
                await originalLoadResults();
                $('#results-loading').addClass('d-none');
            };
        });
    </script>
}