@model ShoppingCart


<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/animate.css/4.1.1/animate.min.css" />
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" />

@section Styles {
	<style>
		.book-image {
			border: 3px solid #fff;
			box-shadow: 0 0.5rem 1rem rgba(0,0,0,0.15);
			transition: all 0.3s ease;
		}

		.animate__pulse {
			animation-duration: 2s;
		}

		.card-header {
			transition: all 0.3s ease;
		}

		.card:hover .card-header {
			background: linear-gradient(45deg, var(--primary-color), #3CB371) !important;
		}

		.badge {
			font-size: 0.9em;
			padding: 0.6em 1em;
			background-color: var(--primary-color) !important;
		}

		.description-card {
			transition: all 0.3s ease;
			border: 1px solid transparent !important;
		}

			.description-card:hover {
				transform: translateY(-3px);
				border-color: var(--primary-color) !important;
				box-shadow: 0 4px 15px rgba(42, 47, 79, 0.15) !important;
			}

		.bg-white.text-warning {
			color: var(--primary-color) !important;
		}

		.alert-warning {
			background-color: rgba(233, 196, 106, 0.15);
			border-color: #e9c46a;
		}

		.alert-success {
			background-color: rgba(42, 157, 143, 0.15);
			border-color: #2a9d8f;
		}
	</style>
}

@if (Model.Book?.TransactionType == TransactionType.Sell)
{
	<!-- Purchase Form -->
	<form method="post">
		<input type="hidden" name="BookId" value="@Model.BookId" />

		<div class="card shadow border-0 mt-4 mb-4 animate__animated animate__fadeIn">
			<!-- Header -->
			<div class="card-header bg-primary bg-gradient text-white py-4 text-center">
				<div class="row align-items-center">
					<div class="col-auto">
						<a asp-action="Index" class="btn btn-outline-light rounded-pill">
							<i class="fas fa-chevron-left me-2"></i>Back to Books
						</a>
					</div>
					<div class="col text-center">
						<h3 class="text-white text-uppercase mb-0">@Model.Book.Title</h3>
						<p class="text-white-50 fw-semibold mb-0 mt-2">by @Model.Book.Author</p>
					</div>
					<div class="col-auto"></div>
				</div>
			</div>

			<!-- Body -->
			<div class="card-body">
				<div class="row">
					<!-- Image Section -->
					<div class="col-12 col-lg-4 text-center mb-4">
						<div class="position-relative">
							<img src="@Model.Book.ImageUrl"
								 class="img-fluid rounded shadow-lg book-image"
								 alt="@Model.Book.Title cover"
								 style="max-height: 400px; transition: transform 0.3s ease;"
								 onmouseover="this.style.transform='scale(1.03)'"
								 onmouseout="this.style.transform='scale(1)'">
							<div class="position-absolute top-0 start-0 mt-2 ms-2">
								<span class="badge bg-info fs-6">
									<i class="fas fa-book-open me-2"></i>@Model.Book.BookCategory.CategoryName
								</span>
							</div>
						</div>
					</div>

					<!-- Details Section -->
					<div class="col-12 col-lg-8">
						<!-- Transaction Type Badge -->
						<div class="mb-4">
							<div class="d-inline-block bg-success p-2 rounded-pill shadow-sm">
								<i class="fas fa-tag me-2"></i>
								<span class="fw-bold">Available for Purchase</span>
							</div>
						</div>

						<!-- Book Status Indicator -->
						<div class="alert @(Model.Book.BookStatus == BookStatus.Available ? "alert-success" : "alert-warning")
							animate__animated animate__pulse" role="alert">
							<h5 class="mb-0">
								<i class="fas fa-info-circle me-2"></i>
								@if (Model.Book.BookStatus == BookStatus.Available)
								{
									<span>Available for Borrowing</span>
								}
								else
								{
									<span>Currently Borrowed</span>
									if (Model.Book.DueDate.HasValue)
									{
										<span> - Due @Model.Book.DueDate.Value.ToString("MMM dd, yyyy")</span>
									}
								}
							</h5>
						</div>

						<!-- Pricing Section -->
						<div class="bg-light p-4 rounded-3 mb-4">
							<div class="row ps-2">
								<h6 class="text-dark text-opacity-50 pb-2">
									List Price:
									<span class="text-decoration-line-through">
										@(Model.Book.ListPrice?.ToString("c") ?? "N/A")
									</span>
								</h6>
							</div>
							<div class="row text-center ps-2">
								<div class="p-1 col-3 col-lg-2 bg-white border-bottom">
									<div class="text-dark text-opacity-50 fw-semibold">Quantity</div>
								</div>
								<div class="p-1 col-3 col-lg-2 bg-white border-bottom">
									<div class="text-dark text-opacity-50 fw-semibold">1-3</div>
								</div>
								<div class="p-1 col-3 col-lg-2 bg-white border-bottom">
									<div class="text-dark text-opacity-50 fw-semibold">3-5</div>
								</div>
								<div class="p-1 col-3 col-lg-2 bg-white border-bottom">
									<div class="text-dark text-opacity-50 fw-semibold">5+</div>
								</div>
							</div>
							<div class="row text-center ps-2">
								<div class="p-1 col-3 col-lg-2 bg-white text-warning fw-bold">
									<div>@Model.Book.Price.GetValueOrDefault().ToString("c")</div>
								</div>
								<div class="p-1 col-3 col-lg-2 bg-white text-warning fw-bold">
									<div>@Model.Book.Price.GetValueOrDefault().ToString("c")</div>
								</div>
								<div class="p-1 col-3 col-lg-2 bg-white text-warning fw-bold">
									<div>@Model.Book.Price3.GetValueOrDefault().ToString("c")</div>
								</div>
								<div class="p-1 col-3 col-lg-2 bg-white text-warning fw-bold">
									<div>@Model.Book.Price5.GetValueOrDefault().ToString("c")</div>
								</div>
							</div>
						</div>

						<!-- Add to Cart Button -->
						<div class="d-grid gap-3">
							<div class="row mb-4">
								<div class="col-md-8">
									<div class="d-flex gap-5 align-items-center">
										<div class="input-group flex-nowrap" style="width: 200px;">
											<span class="input-group-text bg-primary text-white border-0">Qty</span>
											<input asp-for="Count" type="number" value="1"
												   class="form-control text-end" min="1" max="100">
										</div>
										<button type="submit" class="btn btn-success btn-lg w-100 py-3 text-uppercase fw-bold
                                                       animate__animated animate__pulse animate__infinite">
											<i class="fas fa-cart-plus me-2"></i>Add to Cart
										</button>
									</div>
								</div>
							</div>
						</div>
					</div>
				</div>

				<!-- Description Section -->
				<div class="row mt-4">
					<div class="col-12">
						<div class="card border-0 shadow-sm">
							<div class="card-header bg-primary bg-gradient text-white border-bottom-0 pb-0">
								<h4 class="mb-3">Book Description</h4>
							</div>
							<div class="card-body px-0">
								<div class="lh-lg" style="font-size: 1.1rem; line-height: 1.8; padding-left: 20px;">
									@Html.Raw(Model.Book.Description)
								</div>
							</div>
						</div>
					</div>
				</div>
			</div>
		</div>
	</form>
}
else if (Model.Book?.TransactionType == TransactionType.Lend)
{
	<!-- Borrow Form -->

	<div class="card shadow border-0 mt-4 mb-4 animate__animated animate__fadeIn">
		<!-- Header -->
		<div class="card-header bg-primary bg-gradient text-white py-4 text-center">
			<div class="row align-items-center">
				<div class="col-auto">
					<a asp-action="Index" class="btn btn-outline-light rounded-pill">
						<i class="fas fa-chevron-left me-2"></i>Back to Books
					</a>
				</div>
				<div class="col text-center">
					<h3 class="text-white text-uppercase mb-0">@Model.Book.Title</h3>
					<p class="text-white-50 fw-semibold mb-0 mt-2">by @Model.Book.Author</p>
				</div>
				<div class="col-auto"></div>
			</div>
		</div>

		<!-- Body -->
		<div class="card-body">
			<div class="row">
				<!-- Image Section -->
				<div class="col-12 col-lg-4 text-center mb-4">
					<div class="position-relative">
						<img src="@Model.Book.ImageUrl"
							 class="img-fluid rounded shadow-lg book-image"
							 alt="@Model.Book.Title cover"
							 style="max-height: 400px; transition: transform 0.3s ease;"
							 onmouseover="this.style.transform='scale(1.03)'"
							 onmouseout="this.style.transform='scale(1)'">
						<div class="position-absolute top-0 start-0 mt-2 ms-2">
							<span class="badge bg-info fs-6">
								<i class="fas fa-book-open me-2"></i>@Model.Book.BookCategory.CategoryName
							</span>
						</div>
					</div>
				</div>

				<!-- Details Section -->
				<div class="col-12 col-lg-8">
					<!-- Transaction Type Badge -->
					<div class="mb-4">
						<div class="d-inline-block bg-warning p-2 rounded-pill shadow-sm">
							<i class="fas fa-hand-holding-usd me-2"></i>
							<span class="fw-bold">Available for Lending</span>
						</div>
					</div>

					<!-- Book Status Indicator -->
					<div class="alert @(Model.Book.BookStatus == BookStatus.Available ? "alert-success" : "alert-warning")
                                    animate__animated animate__pulse" role="alert">
						<h5 class="mb-0">
							<i class="fas fa-info-circle me-2"></i>
							@(Model.Book.BookStatus == BookStatus.Available ?
														"Available Now" : $"Borrowed until {Model.Book.DueDate?.ToString("MMM dd, yyyy")}")
						</h5>
					</div>

					<!-- Lending Details -->
					<div class="bg-light p-4 rounded-3 mb-4">
						<div class="row g-3">
							<div class="col-md-6">
								<div class="d-flex align-items-center bg-white p-3 rounded shadow-sm">
									<i class="fas fa-clock fa-2x text-primary me-3"></i>
									<div>
										<h6 class="mb-0">Max Lend Duration</h6>
										<p class="mb-0 text-muted">@Model.Book.MaxLendDurationDays days</p>
									</div>
								</div>
							</div>

							@if (Model.Book.BookStatus == BookStatus.Borrowed)
							{
								<div class="col-md-6">
									<div class="d-flex align-items-center bg-white p-3 rounded shadow-sm">
										<i class="fas fa-calendar-check fa-2x text-success me-3"></i>
										<div>
											<h6 class="mb-0">Due Date</h6>
											<p class="mb-0 text-muted">
												@Model.Book.DueDate?.ToString("MMM dd, yyyy")
											</p>
										</div>
									</div>
								</div>
							}
						</div>
					</div>

					<!-- Borrow Request Button -->
					<div class="d-grid gap-3">
						<div class="mt-4">
							@if (Model.Book.BookStatus == BookStatus.Available)
							{
								<button type="button"
										class="btn btn-borrow-request btn-success btn-lg w-100 py-3 text-uppercase fw-bold animate__animated animate__pulse animate__infinite"
										data-bookid="@Model.BookId">
									<i class="fas fa-handshake me-2"></i>Request to Borrow
								</button>

							}
							else
							{
								<div class="alert alert-info">
									<h5 class="mb-0">
										<i class="fas fa-info-circle me-2"></i>
										This book is currently borrowed and will be available after
										@Model.Book.DueDate?.ToString("MMM dd, yyyy")
									</h5>
								</div>
							}
						</div>
					</div>
				</div>
			</div>

			<!-- Description Section -->
			<div class="row mt-4">
				<div class="col-12">
					<div class="card border-0 shadow-sm">
						<div class="card-header bg-primary bg-gradient text-white border-bottom-0 pb-0">
							<h4 class="mb-3">Book Description</h4>
						</div>
						<div class="card-body px-0">
							<div class="lh-lg" style="font-size: 1.1rem; line-height: 1.8; padding-left: 20px;">
								@Html.Raw(Model.Book.Description)
							</div>
						</div>
					</div>
				</div>
			</div>
		</div>
	</div>

	<div class="modal fade" id="borrowModal" tabindex="-1">
		<div class="modal-dialog modal-dialog-centered">
			<div class="modal-content">
				<!-- Header will be loaded via AJAX with the partial -->
				<div id="modalContent"></div>
			</div>
		</div>
	</div>
}



@section Scripts {
	<!-- Include Toastr JS -->
	<script src="//cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/js/toastr.min.js"></script>
	<partial name="_ValidationScriptsPartial" />
	<script>
		$(document).ready(function () {
			$('.btn-borrow-request').click(function () {
				var bookId = $(this).data('bookid');
				$.ajax({
					url: '/Member/Borrow/RequestBorrow?bookId=' + bookId,
					type: 'GET',
					success: function (response) {
						// If the response is JSON with an error, display it using toastr
						if (typeof response === 'object' && response.success === false) {
							toastr.error(response.error);
						} else {
							// Otherwise, assume the response is HTML (partial view) and load it into the modal
							$('#modalContent').html(response);
							$('#borrowModal').modal('show');
						}
					},
					error: function (xhr) {
						if (xhr.status === 401) {
							// Redirect to login if unauthorized
							window.location.href = '/Identity/Account/Login'; // Adjust the URL if necessary
						} else {
							toastr.error('An error occurred: ' + xhr.statusText);
						}
					}
				});
			});

			$('#borrowModal').on('submit', '#borrowForm', function (e) {
				e.preventDefault();
				var $form = $(this);
				$.ajax({
					url: $form.attr('action'),
					type: 'POST',
					data: $form.serialize(),
					headers: {
						"RequestVerificationToken": $('input[name="__RequestVerificationToken"]').val()
					},
					success: function (response) {
						if (response.success) {
							$('#borrowModal').modal('hide');
							window.location.href = response.redirect;
						} else {
							$('#modalContent').html(response);
						}
					},
					error: function (xhr) {
						if (xhr.status === 401) {
							// Redirect to login if unauthorized
							window.location.href = '/Account/Login'; // Adjust the URL if necessary
						} else {
							alert('An error occurred: ' + xhr.statusText);
						}
					}
				});
			});
		});
	</script>

}